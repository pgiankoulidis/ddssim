#ifndef __RESULTS_HH__
#define __RESULTS_HH__

#include "dsarch.hh"
#include "output.hh"

namespace dds {

/**
	Statistics for each local stream.

	Generated by data_source_statistics
  */
struct local_stream_stats_t : result_table
{
	column<stream_id> 	sid			{this, "sid", "%hd" };
	column<source_id> 	hid 		{this, "hid", "%hd" };
	column<size_t>		stream_len 	{this, "stream_len", "%zu", 0 };
	local_stream_stats_t();
};
extern local_stream_stats_t lsstats;

/**
	Communication results for each network
  */
struct comm_results_t : result_table
{
	column<string> netname   	{this, "netname", 24, "%s" };
	column<double> max_error 	{this, "max_error", "%.8g" };
	column<size_t> sites     	{this, "sites", "%zu" };
	column<size_t> streams   	{this, "streams", "%zu" };
	column<size_t> local_viol	{this, "local_viol", "%zu" };
	column<size_t> total_msg 	{this, "total_msg", "%zu" };
	column<size_t> total_bytes 	{this, "total_bytes", "%zu" };
	column<double> traffic_pct  {this, "traffic_pct", "%.10g" };
	comm_results_t();
};
extern comm_results_t comm_results;


struct network_host_traffic_t : result_table
{
	// each row corresponds to a channel
	column<string> netname		{this, "netname", 24, "%s"};
	column<host_addr> src 		{this, "src", "%d"};
	column<host_addr> dst 		{this, "dst", "%d"};
	column<rpcc_t>  endp		{this, "endp", "%u"};
	column<size_t>  msgno		{this, "msgno", "%zu"};
	column<size_t>  byteno		{this, "byteno", "%zu"};
	network_host_traffic_t() : result_table("network_host_traffic") {}
};
extern network_host_traffic_t network_host_traffic;


} // end namespace dds

#endif